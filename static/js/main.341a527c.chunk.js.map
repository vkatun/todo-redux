{"version":3,"sources":["store/index.js","screens/App/components/Control/styled.js","store/main/main.actions.js","screens/App/components/DropdownMenu/DropdownMenu.js","screens/App/components/Control/Control.js","screens/App/components/ContentEditor/styled.js","screens/App/components/ContentEditor/ContentEditor.js","screens/App/components/Task/styled.js","screens/App/components/Task/Task.js","screens/App/components/List/styled.js","store/main/main.selectors.js","screens/App/components/List/List.js","screens/App/styled.js","hooks/useLoadTasks.js","screens/App/App.js","store/main/main.reducers.js","store/root.reducer.js","core/theme/globals.js","index.js"],"names":["initialState","ControlWrapper","styled","div","InputWrapper","ButtonWrapper","input","TASK_CREATE","TASK_CHANGE_TEXT","TASK_REMOVE","TASK_CHANGE_CHECKBOX","TASKS_SET_ALL","SET_SHOWN_TASKS","dropdownMenuItems","title","action","DropdownMenu","dispatch","useDispatch","useState","buttonText","setButtonText","handleOptionClick","text","value","type","shownTasks","Dropdown","Toggle","variant","id","Menu","map","Item","onClick","Control","inputText","setInputText","handleContent","taskText","Button","FormControl","placeholder","onChange","e","target","onKeyDown","key","Input","ContentEditor","content","setTaskText","useEffect","taskChangeText","TaskWrapper","ButtonsWrapper","Task","isChecked","isEditorOpened","setIsEditorOpened","handleCheckboxChange","taskToggleDone","checked","pervState","taskRemove","ListWrapper","getShownTasks","createSelector","store","main","tasks","string","filter","task","List","useSelector","state","ListGroup","ListGroupItem","AppWrapper","useLoadTasks","isLoaded","setIsLoaded","localStorage","setItem","JSON","stringify","savedTasks","parse","getItem","tasksSetAll","App","handleTaskCreate","Math","random","handleChangeTaskText","handleTaskRemove","handleTasksSet","handleSetShownTasks","rootReducer","combineReducers","GlobalStyle","createGlobalStyle","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.341a527c.chunk.js","sourcesContent":["import { createStore } from 'redux';\nimport { rootReducer } from './root.reducer';\n\nexport const configureStore = initialState => {\n  const store = createStore(\n    rootReducer,\n    initialState,\n    window.__REDUX_DEVTOOLS_EXTENSION__ &&\n      window.__REDUX_DEVTOOLS_EXTENSION__(),\n  );\n  return store;\n};\n","import styled from 'styled-components';\n\nexport const ControlWrapper = styled.div`\n  display: flex;\n  flex-direction: row-reverse;\n  justify-content: space-between;\n  align-items:center;\n`;\nexport const InputWrapper = styled.div`\n  width: 400px;\n  margin: 25px;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n`;\n\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin: 25px;\n`;\n","export const TASK_CREATE = 'TASK_CREATE';\nexport const TASK_CHANGE_TEXT = 'TASK_CHANGE_TEXT';\nexport const TASK_REMOVE = 'TASK_REMOVE';\nexport const TASK_CHANGE_CHECKBOX = 'TASK_CHANGE_CHECKBOX';\nexport const TASKS_SET_ALL = 'TASKS_SET_ALL';\nexport const SET_SHOWN_TASKS = 'SET_SHOWN_TASKS';\n\nexport const taskCreate = taskText => ({\n  type: TASK_CREATE,\n  taskText,\n});\n\nexport const taskChangeText = (id, taskText) => ({\n  type: TASK_CHANGE_TEXT,\n  id,\n  taskText,\n});\n\nexport const taskRemove = id => ({\n  type: TASK_REMOVE,\n  id,\n});\n\nexport const taskToggleDone = id => ({\n  type: TASK_CHANGE_CHECKBOX,\n  id,\n});\n\nexport const tasksSetAll = tasks => ({\n  type: TASKS_SET_ALL,\n  tasks,\n});\n\nexport const setShownTasks = shownTasks => ({\n  type: SET_SHOWN_TASKS,\n  shownTasks,\n});\n","import React from 'react';\r\nimport { Dropdown } from 'react-bootstrap';\r\nimport { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setShownTasks } from '../../../../store/main/main.actions';\r\n\r\nconst dropdownMenuItems = [\r\n  { title: 'Все задачи', action: 'showAll' },\r\n  { title: 'Только выполненные задачи', action: 'onlyCompleted' },\r\n  { title: 'Только невыполненные задачи', action: 'onlyUncompleted' },\r\n];\r\n\r\nexport const DropdownMenu = () => {\r\n  const dispatch = useDispatch();\r\n  const [buttonText, setButtonText] = useState('Все задачи');\r\n\r\n  const handleOptionClick = (text, value) => {\r\n    setButtonText(text);\r\n    dispatch(setShownTasks(value));\r\n  };\r\n\r\n  return (\r\n    <Dropdown>\r\n      <Dropdown.Toggle variant='success' id='dropdown-basic'>\r\n        {buttonText}\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        {dropdownMenuItems.map(({ title, action }) => (\r\n          <Dropdown.Item\r\n            key={title}\r\n            onClick={() => handleOptionClick(title, action)}\r\n          >\r\n            {title}\r\n          </Dropdown.Item>\r\n        ))}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Button, FormControl } from 'react-bootstrap';\nimport { ControlWrapper, InputWrapper, ButtonWrapper } from './styled';\nimport { taskCreate } from '../../../../store/main/main.actions';\nimport { DropdownMenu } from '../DropdownMenu/DropdownMenu';\n\nexport const Control = () => {\n  const [inputText, setInputText] = useState('');\n\n  const dispatch = useDispatch();\n\n  const handleText = e => {\n    setInputText(e.target.value);\n  };\n\n  const handleContent = () => {\n    if (inputText) {\n      dispatch(taskCreate(inputText));\n    }\n    setInputText('');\n  };\n\n  const handleEnterDown = e => {\n    if (e.key === 'Enter') {\n      handleContent();\n    }\n  };\n\n  return (\n    <ControlWrapper>\n      <ButtonWrapper>\n        <Button variant='success' onClick={handleContent}>\n          Добавить задачу\n        </Button>\n      </ButtonWrapper>\n      <InputWrapper>\n        <FormControl\n          placeholder='Введите задачу'\n          onChange={handleText}\n          value={inputText}\n          onKeyDown={handleEnterDown}\n        />\n      </InputWrapper>\n      <DropdownMenu />\n    </ControlWrapper>\n  );\n};\n","import styled from 'styled-components';\nexport const Input = styled.input`\n  text-align: center;\n`;\n","import { useState, useEffect } from 'react';\nimport { Input } from './styled';\nimport { useDispatch } from 'react-redux';\nimport { taskChangeText } from '../../../../store/main/main.actions';\n\nexport const ContentEditor = ({ content, id }) => {\n  const dispatch = useDispatch();\n  const [taskText, setTaskText] = useState(content);\n\n  const handleEdit = () => dispatch(taskChangeText(id, taskText));\n\n  useEffect(handleEdit, [taskText]);\n\n  const handleText = e => {\n    setTaskText(e.target.value);\n  };\n\n  return <Input value={taskText} onChange={handleText} />;\n};\n","import styled from 'styled-components';\nexport const TaskWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center; ;\n`;\n\nexport const ButtonsWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 175px;\n`;\n","import { useState } from 'react';\nimport { ContentEditor } from '../ContentEditor/ContentEditor';\nimport { TaskWrapper, ButtonsWrapper } from './styled';\nimport { Button } from 'react-bootstrap';\nimport {\n  taskRemove,\n  taskToggleDone,\n} from '../../../../store/main/main.actions';\nimport { useDispatch } from 'react-redux';\n\nexport const Task = ({ id, content, isChecked }) => {\n  const [isEditorOpened, setIsEditorOpened] = useState(false);\n  const dispatch = useDispatch();\n  const removeTask = () => dispatch(taskRemove(id));\n  const handleEditorChange = () => setIsEditorOpened(pervState => !pervState);\n  const handleCheckboxChange = () => dispatch(taskToggleDone(id));\n\n  return (\n    <TaskWrapper id={id}>\n      <input\n        type='checkbox'\n        checked={isChecked}\n        onChange={() => handleCheckboxChange(id)}\n      />\n      {isEditorOpened ? <ContentEditor id={id} content={content} /> : content}\n      <ButtonsWrapper>\n        <Button variant='secondary' onClick={handleEditorChange}>\n          редактировать\n        </Button>\n        <Button variant='danger' onClick={removeTask}>\n          x\n        </Button>\n      </ButtonsWrapper>\n    </TaskWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ListWrapper = styled.div`\n  display: flex;\n  flex-direction: column-reverse;\n`;\n","import { createSelector } from 'reselect';\r\n\r\nexport const getTasks = store => store.main.tasks;\r\nexport const getShowTasks = store => store.main.shownTasks;\r\nexport const completedTasks = store =>\r\n  store.main.tasks.filter(task => task.isChecked);\r\nexport const uncompletedTasks = store =>\r\n  store.main.tasks.filter(task => !task.isChecked);\r\nexport const getShownTasks = createSelector(\r\n  getTasks,\r\n  getShowTasks,\r\n  (tasks, string) => {\r\n    switch (string) {\r\n      case 'showAll':\r\n        return tasks;\r\n      case 'onlyCompleted':\r\n        return tasks.filter(task => task.isChecked);\r\n      case 'onlyUncompleted':\r\n        return tasks.filter(task => !task.isChecked);\r\n      default:\r\n        return tasks;\r\n    }\r\n  },\r\n);\r\n","import React from 'react';\nimport { Task } from '../Task/Task';\nimport { ListGroup, ListGroupItem } from 'react-bootstrap';\nimport { ListWrapper } from './styled';\nimport { useSelector } from 'react-redux';\nimport { getShownTasks } from '../../../../store/main/main.selectors';\n\nexport const List = () => {\n  const tasks = useSelector(state => getShownTasks(state));\n\n  return (\n    <ListWrapper>\n      <ListGroup>\n        {tasks.map(task => {\n          return (\n            <ListGroupItem key={task.id}>\n              <Task\n                id={task.id}\n                content={task.content}\n                isChecked={task.isChecked}\n              />\n            </ListGroupItem>\n          );\n        })}\n      </ListGroup>\n    </ListWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const AppWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  max-width: 1000px;\n  width: 100%;\n  padding: 20px;\n`;\n","import { useEffect, useState } from 'react';\r\nimport { tasksSetAll } from '../store/main/main.actions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nexport const useLoadTasks = () => {\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const tasks = useSelector(state => state.main.tasks);\r\n\r\n  useEffect(() => {\r\n    if (isLoaded) {\r\n      localStorage.setItem('tasks', JSON.stringify(tasks));\r\n    }\r\n  }, [tasks, isLoaded]);\r\n\r\n  useEffect(() => {\r\n    const savedTasks = JSON.parse(localStorage.getItem('tasks')) ?? [];\r\n    dispatch(tasksSetAll(savedTasks));\r\n    setIsLoaded(true);\r\n  }, []);\r\n};\r\n","import React from 'react';\nimport { Control } from './components/Control/Control';\nimport { List } from './components/List/List';\nimport { AppWrapper } from './styled';\nimport { useLoadTasks } from '../../hooks/useLoadTasks';\nexport const App = () => {\n  useLoadTasks();\n  return (\n    <AppWrapper>\n      <Control />\n      <List />\n    </AppWrapper>\n  );\n};\nexport default App;\n","import {\n  TASK_CHANGE_TEXT,\n  TASK_CREATE,\n  TASK_REMOVE,\n  TASK_CHANGE_CHECKBOX,\n  TASKS_SET_ALL,\n  SET_SHOWN_TASKS,\n} from './main.actions';\n\nconst initialState = {\n  tasks: [],\n  shownTasks: 'showAll',\n};\n\nconst handleTaskCreate = (state, action) => {\n  return {\n    ...state,\n    tasks: [\n      ...state.tasks,\n      { content: action.taskText, isChecked: false, id: Math.random() * 1000 },\n    ],\n  };\n};\n\nconst handleChangeTaskText = (state, action) => {\n  return {\n    ...state,\n    tasks: [\n      ...state.tasks.map(task =>\n        task.id === action.id ? { ...task, content: action.taskText } : task,\n      ),\n    ],\n  };\n};\n\nconst handleTaskRemove = (state, action) => {\n  return {\n    ...state,\n    tasks: [...state.tasks.filter(task => task.id !== action.id)],\n  };\n};\n\nconst handleCheckboxChange = (state, action) => {\n  return {\n    ...state,\n    tasks: [\n      ...state.tasks.map(task =>\n        task.id === action.id ? { ...task, isChecked: !task.isChecked } : task,\n      ),\n    ],\n  };\n};\n\nconst handleTasksSet = (state, action) => {\n  return {\n    ...state,\n    tasks: action.tasks,\n  };\n};\n\nconst handleSetShownTasks = (state, action) => {\n  return {\n    ...state,\n    shownTasks: action.shownTasks,\n  };\n};\n\nexport const mainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case TASK_CREATE:\n      return handleTaskCreate(state, action);\n    case TASK_CHANGE_TEXT:\n      return handleChangeTaskText(state, action);\n    case TASK_REMOVE:\n      return handleTaskRemove(state, action);\n    case TASK_CHANGE_CHECKBOX:\n      return handleCheckboxChange(state, action);\n    case TASKS_SET_ALL:\n      return handleTasksSet(state, action);\n    case SET_SHOWN_TASKS:\n      return handleSetShownTasks(state, action);\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux'\r\nimport { mainReducer } from './main/main.reducers'\r\n\r\nexport const rootReducer = combineReducers({\r\n  main: mainReducer,\r\n  \r\n})","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\nhtml, body, #root {\n    width: 100%;\n    height: 100% };\n#root {\n    display: flex;\n    justify-content: center;\n\n }`;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './screens/App/App';\n\nimport { configureStore } from './store';\nimport { Provider } from 'react-redux';\nimport { GlobalStyle } from './core/theme/globals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <GlobalStyle />\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}